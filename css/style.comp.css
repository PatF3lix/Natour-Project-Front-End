/* This file will be for the real low level basics,
 such as resets and styles for the HTML and BODY elements*/
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* inherite from body -- better practice to inherit the box-sizing , like so */
  box-sizing: inherit; }

/* the root font size is set in the html el , this defines what is the value of 1 rem */
/* (10 * 100) / 16 = 62.5% */
html {
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(10rem); }
  80% {
    transform: translateY(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  margin-bottom: 6rem;
  /*
    the backface visibility property determines, if the back part of the element when 
    we transform it is visible or hiddent for the user. 'used in combination with animations'
  */
  backface-visibility: hidden; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 3s;
    animation-timing-function: ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation-name: moveInRight;
    animation-duration: 3s;
    animation-timing-function: ease-out; }

.btn {
  /* the translate is always in relative to the initial state: &:link */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all 0.2s;
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s; }
  .btn--animated {
    animation: moveInBottom 3s ease-out 0.75s;
    /* this will automaticaly apply the styles of the 0% before the animation starts */
    animation-fill-mode: backwards; }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  /* clipping a part of the image */
  /* clip-path: polygon(50% 0, 100% 100%, 0 100%); triangle shape*/
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative; }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 4.5rem; }
  .header__text-box {
    text-align: center;
    position: absolute;
    text-transform: capitalize;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%); }

.grid-test {
  display: grid;
  grid-template-columns: 1fr [col-start] minmax(min-content, 80vw) [col-end] 1fr;
  grid-template-rows: repeat(6, [row-start] minmax(min-content, max-content) [row-end]);
  row-gap: 5rem; }

.row {
  display: grid;
  grid-column: col-start / col-end; }
  .row__1 {
    grid-template-columns: repeat(13, [col-start] 1fr [col-end]);
    grid-row: row-start / row-end; }
    .row__1 > * {
      background-color: red;
      padding: 2rem;
      color: white; }
    .row__1-col-1 {
      grid-column: col-start / col-end 6; }
    .row__1-col-2 {
      grid-column: col-start 8 / col-end 13; }
  .row__2 {
    grid-template-columns: repeat(14, [col-start] 1fr [col-end]);
    grid-row: row-start 2 / row-end 2; }
    .row__2 > * {
      padding: 2rem;
      color: white;
      background-color: blue; }
    .row__2-col-1 {
      grid-column: col-start / col-end 4; }
    .row__2-col-2 {
      grid-column: col-start 6 / col-end 9; }
    .row__2-col-3 {
      grid-column: col-start 11 / col-end 14; }
  .row__3 {
    grid-template-columns: repeat(14, [col-start] 1fr [col-end]);
    grid-row: row-start 3 / row-end 3; }
    .row__3 > * {
      padding: 2rem;
      color: white;
      background-color: aqua; }
    .row__3-col-1 {
      grid-column: col-start / col-end 4; }
    .row__3-col-2 {
      grid-column: col-start 6 / col-end 14; }
  .row__4 {
    grid-template-columns: repeat(15, [col-start] 1fr [col-end]);
    grid-row: row-start 4 / row-end 4; }
    .row__4 > * {
      padding: 2rem;
      color: white;
      background-color: violet; }
    .row__4-col-1 {
      grid-column: col-start / col-end 3; }
    .row__4-col-2 {
      grid-column: col-start 5 / col-end 7; }
    .row__4-col-3 {
      grid-column: col-start 9 / col-end 11; }
    .row__4-col-4 {
      grid-column: col-start 13 / col-end 15; }
  .row__5 {
    grid-template-columns: repeat(15, [col-start] 1fr [col-end]);
    grid-row: row-start 5 / row-end 5; }
    .row__5 > * {
      padding: 2rem;
      color: white;
      background-color: brown; }
    .row__5-col-1 {
      grid-column: col-start / col-end 3; }
    .row__5-col-2 {
      grid-column: col-start 5 / col-end 7; }
    .row__5-col-3 {
      grid-column: col-start 9 / col-end 15; }
  .row__6 {
    grid-template-columns: repeat(15, [col-start] 1fr [col-end]);
    grid-row: row-start 6 / row-end 6; }
    .row__6 > * {
      padding: 2rem;
      color: white;
      background-color: green; }
    .row__6-col-1 {
      grid-column: col-start / col-end 3; }
    .row__6-col-2 {
      grid-column: col-start 5 / col-end 15; }
